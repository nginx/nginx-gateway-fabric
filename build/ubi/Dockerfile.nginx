# syntax=docker/dockerfile:1.18
FROM scratch AS nginx-files

# the following links can be replaced with local files if needed, i.e. ADD --chown=101:1001 <local_file> <container_file>
ADD --link --chown=101:1001 https://nginx.org/keys/nginx_signing.key nginx_signing.key
ADD --link --chown=101:1001 build/ubi/repos/nginx.repo nginx.repo
ADD --link --chown=101:1001 build/ubi/repos/agent.repo agent.repo

FROM ghcr.io/nginx/dependencies/nginx-ubi:ubi9@sha256:01a32246761b9bbe47a6a29bcd8ca6e9b6e331b3bdfa372d8987b622276f7025 AS packages

FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

# renovate: datasource=github-tags depName=nginx/agent
ARG NGINX_AGENT_VERSION=v3.3.1
ARG NJS_DIR
ARG NGINX_CONF_DIR
ARG BUILD_AGENT

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
# Prepare packages
RUN --mount=type=bind,from=nginx-files,src=nginx.repo,target=/etc/yum.repos.d/nginx.repo \
    --mount=type=bind,from=nginx-files,src=agent.repo,target=/etc/yum.repos.d/agent.repo \
    --mount=type=bind,from=nginx-files,src=nginx_signing.key,target=/tmp/nginx_signing.key \
    --mount=type=bind,from=packages,src=/,target=/ubi-bin/ \
    rpm --import /tmp/nginx_signing.key \
    && microdnf update -y \
    && microdnf --nodocs install -y shadow-utils subscription-manager \
    && rpm -qa --queryformat "%{NAME}\n" | sort > pkgs-installed \
	&& microdnf --nodocs --setopt=install_weak_deps=0 install -y diffutils dnf \
	&& rpm -qa --queryformat "%{NAME}\n" | sort > pkgs-new \
	&& dnf install -y /ubi-bin/*.rpm \
	&& dnf -q repoquery --resolve --requires --recursive --whatrequires nginx --queryformat "%{NAME}" > pkgs-nginx \
	&& dnf --setopt=protected_packages= remove -y $(comm -13 pkgs-installed pkgs-new | comm -13 pkgs-nginx -) \
	&& rm pkgs-installed pkgs-new pkgs-nginx \
    && microdnf --nodocs install -y nginx \
    && microdnf --nodocs install -y nginx-module-njs nginx-module-image-filter nginx-module-xslt \
    # && microdnf --enablerepo=appstream install -y c-ares \
    && microdnf --nodocs install -y nginx-agent-${NGINX_AGENT_VERSION#v}

# RUN  rm /etc/yum.repos.d/nginx.repo \
#     && rm /etc/yum.repos.d/agent.repo \
#     && microdnf clean all

# Configure logs and directories
RUN mkdir -p /usr/lib/nginx/modules \
    && mkdir -p /usr/lib64/nginx/modules \
    && mkdir -p /var/run/nginx \
    && ln -sf /dev/stdout /var/log/nginx/access.log \
    && ln -sf /dev/stderr /var/log/nginx/error.log \
    && cp -r /usr/lib64/nginx/modules/ngx_* /usr/lib/nginx/modules/
    # && ln -sf /usr/lib64/nginx/modules/ngx_http_js_module.so /usr/lib/nginx/modules/ngx_http_js_module.so \
    # && ln -sf /usr/lib64/nginx/modules/ngx_stream_js_module.so /usr/lib/nginx/modules/ngx_stream_js_module.so

COPY build/entrypoint.sh /agent/entrypoint.sh
COPY ${NJS_DIR}/httpmatches.js /usr/lib/nginx/modules/njs/httpmatches.js
COPY ${NGINX_CONF_DIR}/nginx.conf /etc/nginx/nginx.conf
COPY ${NGINX_CONF_DIR}/grpc-error-locations.conf /etc/nginx/grpc-error-locations.conf
COPY ${NGINX_CONF_DIR}/grpc-error-pages.conf /etc/nginx/grpc-error-pages.conf

RUN chown -R 101:1001 /etc/nginx /var/cache/nginx /var/run/nginx /etc/nginx-agent/nginx-agent.conf

LABEL org.nginx.ngf.image.build.agent="${BUILD_AGENT}"

USER 101:1001

ENTRYPOINT ["/agent/entrypoint.sh"]
