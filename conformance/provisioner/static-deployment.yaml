---
# Source: nginx-kubernetes-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-gateway
  namespace: nginx-gateway
  labels:
    app.kubernetes.io/name: nginx-gateway
    app.kubernetes.io/instance: nginx-gateway
    app.kubernetes.io/version: "0.6.0"
spec:
  # We only support a single replica for now
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-gateway
      app.kubernetes.io/instance: nginx-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-gateway
        app.kubernetes.io/instance: nginx-gateway
    spec:
      containers:
      - args:
        - static-mode
        - --gateway-ctlr-name=gateway.nginx.org/nginx-gateway-controller
        - --gatewayclass=nginx
        - --config=nginx-gateway-config
        - --metrics-disable
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: ghcr.io/nginxinc/nginx-kubernetes-gateway:0.6.0
        imagePullPolicy: IfNotPresent
        name: nginx-gateway
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - KILL
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 102
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: nginx-secrets
          mountPath: /etc/nginx/secrets
        - name: nginx-run
          mountPath: /var/run/nginx
      - image: ghcr.io/nginxinc/nginx-kubernetes-gateway/nginx:0.6.0
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsUser: 101
          runAsGroup: 1001
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d
        - name: nginx-secrets
          mountPath: /etc/nginx/secrets
        - name: nginx-run
          mountPath: /var/run/nginx
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-lib
          mountPath: /var/lib/nginx
      serviceAccountName: nginx-gateway
      shareProcessNamespace: true
      securityContext:
        fsGroup: 1001
        runAsNonRoot: true
      volumes:
      - name: nginx-conf
        emptyDir: {}
      - name: nginx-secrets
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-lib
        emptyDir: {}
