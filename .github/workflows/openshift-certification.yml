name: OpenShift Certification

on:
  workflow_call:
    inputs:
      runner:
        required: false
        type: string
        default: 'ubuntu-24.04'

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  preflight:
    runs-on: ${{ inputs.runner }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download preflight binary
      run: |
        curl -LO https://github.com/redhat-openshift-ecosystem/openshift-preflight/releases/latest/download/preflight-linux-amd64
        chmod +x preflight-linux-amd64
        sudo mv preflight-linux-amd64 /usr/local/bin/preflight

    - name: Download NGINX Gateway Fabric image artifact
      uses: actions/download-artifact@v4
      with:
        name: ngf-image

    - name: Load NGINX Gateway Fabric image into Docker
      run: docker load -i ngf-image.tar

    - name: Load NGINX Gateway Fabric image into Docker
      run: docker load -i ngf-image.tar

    - name: Retag image for preflight
      run: |
        IMAGE_ID=$(docker images --format '{{.Repository}}:{{.Tag}}' | grep '^localhost:5000/nginx-gateway-fabric/ngf:' | head -n 1)
        docker tag $IMAGE_ID nginx-gateway-fabric:ubi


    - name: Run preflight for NGINX Gateway Fabric
      env:
        PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
      run: preflight check container nginx-gateway-fabric:ubi > ngf-preflight-result.json

    - name: Download NGINX NGINX OSS image artifact
      uses: actions/download-artifact@v4
      with:
        name: nginx-oss-image

    - name: Load NGINX OSS image into Docker
      run: docker load -i nginx-oss-image.tar

    - name: Retag image for preflight
      run: |
        IMAGE_ID=$(docker images --format '{{.Repository}}:{{.Tag}}' | grep '^localhost:5000/nginx-gateway-fabric/nginx:' | head -n 1)
        docker tag $IMAGE_ID nginx-oss:ubi


    - name: Run preflight for NGINX OSS
      env:
        PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
      run: preflight check container nginx:ubi > ngf-oss-preflight-result.json

    - name: Download NGINX Gateway Fabric Operator image artifact
      uses: actions/download-artifact@v4
      with:
        name: operator-image

    - name: Load NGINX Gateway Fabric Operator image into Docker
      run: docker load -i operator-image.tar

    - name: Retag image for preflight
      run: |
        IMAGE_ID=$(docker images --format '{{.Repository}}:{{.Tag}}' | grep '^localhost:5000/nginx-gateway-fabric/operator:' | head -n 1)
        docker tag $IMAGE_ID ngf-operator:ubi


    - name: Run preflight for NGINX Gateway Fabric Operator
      env:
        PYXIS_API_TOKEN: ${{ secrets.PYXIS_API_TOKEN }}
      run: preflight check container ngf-operator:ubi > ngf-operator-preflight-result.json

    - name: Aggregate preflight results and fail if any checks failed
      run: |
        total_failed=0
        for result in ngf-preflight-result.json ngf-oss-preflight-result.json ngf-operator-preflight-result.json; do
        failed_count=$(jq '.results.failed | length' "$result")
        total_failed=$((total_failed + failed_count))
        done
        if [ "$total_failed" -ne 0 ]; then
        echo "Preflight checks failed: $total_failed failed checks across all images"
        for result in ngf-preflight-result.json ngf-oss-preflight-result.json ngf-operator-preflight-result.json; do
        echo "Results for $result:"
        jq '.results.failed' "$result"
        done
        exit 1
        fi
