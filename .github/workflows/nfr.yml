name: Non Functional Testing

on:
  workflow_dispatch:
    inputs:
      test_label:
        description: NFR test to run. Choose between a specific test or all tests
        required: true
        default: all
        type: choice
        options:
          [
            performance,
            upgrade,
            scale,
            zero-downtime-scale,
            reconfiguration,
            all,
          ]
      version:
        description: Version of NGF under test
        required: true
        default: edge
      image_tag:
        description: Tag of the NGF and NGINX Docker images
        required: true
        default: edge
      type:
        description: Type of NGINX image to test
        required: true
        default: both
        type: choice
        options: [oss, plus, both]
      ipv6_enabled:
        description: Whether to run the tests in an IPv6 enabled environment
        required: false
        default: false
        type: boolean
  schedule:
    - cron: "0 16 1,15 * *" # Run on the 1st and 15th of every month at 16:00 UTC

defaults:
  run:
    shell: bash

env:
  PLUS_USAGE_ENDPOINT: ${{ secrets.JWT_PLUS_REPORTING_ENDPOINT }}

concurrency:
  group: ${{ github.ref_name }}-nfr
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  vars:
    name: Set up vars
    runs-on: ubuntu-24.04
    outputs:
      test_label: ${{ github.event.inputs.test_label || 'all' }}
      version: ${{ github.event.inputs.version || 'edge' }}
      image_tag: ${{ github.event.inputs.image_tag || 'edge' }}
      types: ${{ steps.var.outputs.types }}
    permissions:
      contents: read
    steps:
      - name: Set vars
        id: var
        run: |
          if ${{ github.event.inputs.type == 'both' || github.event_name == 'schedule' }}; then
          echo 'types=["oss","plus"]' >> $GITHUB_OUTPUT
          else
          echo 'types=["${{ github.event.inputs.type }}"]' >> $GITHUB_OUTPUT
          fi

  setup-and-run-tests:
    name: Setup and Run NFR Tests
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      id-token: write # needed for authenticating to GCP
    needs: vars
    strategy:
      fail-fast: false
      matrix:
        type: ${{ fromJson(needs.vars.outputs.types) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@7c6bc770dae815cd3e89ee6cdf493a5fab2cc093 # v3.0.0
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Login to GAR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@aa5489c8933f4cc7a4f7d45035b3b1440c9c10db # v3.0.1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: kubectl

      - name: Setup dotenv file
        working-directory: ./tests/scripts
        run: |
          echo "RESOURCE_NAME=nfr-tests-${{ github.run_id }}-${{ matrix.type }}" >> vars.env
          echo "TAG=${{ needs.vars.outputs.image_tag }}" >> vars.env
          echo "PREFIX=ghcr.io/nginx/nginx-gateway-fabric" >> vars.env
          echo "NGINX_PREFIX=ghcr.io/nginx/nginx-gateway-fabric/nginx" >> vars.env
          echo "NGINX_PLUS_PREFIX=us-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/nginx-gateway-fabric/nginx-plus" >> vars.env
          echo "GKE_CLUSTER_NAME=nfr-tests-${{ github.run_id }}-${{ matrix.type }}" >> vars.env
          echo "GKE_CLUSTER_ZONE=us-west1-b" >> vars.env
          echo "GKE_CLUSTER_REGION=us-west1" >> vars.env
          echo "GKE_PROJECT=${{ secrets.GCP_PROJECT_ID }}" >> vars.env
          echo "GKE_SVC_ACCOUNT=${{ secrets.GCP_SERVICE_ACCOUNT }}" >> vars.env
          echo "GKE_NODES_SERVICE_ACCOUNT=${{ secrets.GKE_NODES_SERVICE_ACCOUNT }}" >> vars.env
          echo "NETWORK_TAGS=nfr-tests-${{ github.run_id }}-${{ matrix.type }}" >> vars.env
          echo "NGF_BRANCH=${{ github.ref_name }}" >> vars.env
          echo "SOURCE_IP_RANGE=$(curl -sS -4 icanhazip.com)/32" >> vars.env
          echo "ADD_VM_IP_AUTH_NETWORKS=true" >> vars.env
          echo "PLUS_ENABLED=${{ matrix.type == 'plus' }}" >> vars.env
          echo "GINKGO_LABEL=" >> vars.env
          echo "NGF_VERSION=${{ needs.vars.outputs.version }}" >> vars.env
          echo "GKE_NUM_NODES=12" >> vars.env
          echo "GKE_MACHINE_TYPE=n2d-standard-16" >> vars.env
          echo "PLUS_USAGE_ENDPOINT=${{ secrets.JWT_PLUS_REPORTING_ENDPOINT }}" >> vars.env
          echo "HELM_PARAMETERS="${{ if inputs.ipv6_enabled }}--set nginx.config.ipFamily=ipv6 >> vars.env"

      - name: Setup license file for plus
        if: matrix.type == 'plus'
        env:
          PLUS_LICENSE: ${{ secrets.JWT_PLUS_REPORTING }}
        run: echo "${PLUS_LICENSE}" > license.jwt

      - name: Create GKE cluster
        working-directory: ./tests
        run: make create-gke-cluster CI=true IPv6_ONLY=${{ needs.vars.outputs.ipv6_enabled }}

      - name: Create and setup VM
        working-directory: ./tests
        run: make create-and-setup-vm

      - name: Create and setup Router
        working-directory: ./tests
        run: make create-gke-router || true

      - name: Run Tests
        working-directory: ./tests
        run: |
          if ${{ needs.vars.outputs.test_label != 'all' }}; then
          sed -i '/^GINKGO_LABEL=/s/=.*/="${{ needs.vars.outputs.test_label }}"/' "scripts/vars.env" && make nfr-test CI=true;
          else
          make nfr-test CI=true;
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: results-${{ matrix.type }}
          path: tests/results/**/*-${{ matrix.type }}.*

      - name: Cleanup
        working-directory: ./tests
        if: always()
        run: |
          bash scripts/cleanup-vm.sh true
          bash scripts/cleanup-router.sh true
          make delete-gke-cluster
          rm -rf scripts/vars.env

  pr-results:
    name: Open PR with results
    runs-on: ubuntu-24.04
    permissions:
      contents: write # needed for opening PR with the results files
      pull-requests: write # needed for opening PR with the results files
    needs: [vars, setup-and-run-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Download Artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: tests/results/
          merge-multiple: true

      - name: Open a PR with the results
        uses: peter-evans/create-pull-request@271a8d0340265f705b14b6d32b9829c1cb33d45e # v7.0.8
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: NFR Test Results for NGF version ${{ needs.vars.outputs.version }}
          author: nginx-bot <integrations@nginx.com>
          committer: nginx-bot <integrations@nginx.com>
          branch: tests/nfr-tests-${{ needs.vars.outputs.version }}
          delete-branch: true
          title: NFR Test Results for NGF version ${{ needs.vars.outputs.version }}
          add-paths: |
            tests/results/
          body: |
            Update with NFR test results for NGF version ${{ needs.vars.outputs.version }} ${{ needs.vars.outputs.types }}
            - Auto-generated by the NFR tests workflow run ${{ github.run_id }}
            - Tests ran using Docker image tag ${{ needs.vars.outputs.image_tag }}
            - ${{ needs.vars.outputs.test_label }} test(s) ran
          assignees: ${{ github.actor }}
          draft: ${{ github.event_name != 'schedule' }}
