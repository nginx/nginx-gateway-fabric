name: Functional Testing

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      k8s-version:
        required: true
        type: string

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  functional-tests:
    name: Run Tests
    runs-on: ubuntu-22.04
    env:
      DOCKER_BUILD_SUMMARY: false
    steps:
      - name: Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: Setup Golang Environment
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version: stable

      - name: Set GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Docker Buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

      - name: NGF Docker meta
        id: ngf-meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            name=ghcr.io/nginxinc/nginx-gateway-fabric
          tags: |
            type=semver,pattern={{version}}
            type=schedule
            type=edge
            type=ref,event=pr
            type=ref,event=branch,suffix=-rc,enable=${{ startsWith(github.ref, 'refs/heads/release') }}

      - name: NGINX Docker meta
        id: nginx-meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            name=ghcr.io/nginxinc/nginx-gateway-fabric/${{ inputs.image == 'plus' && 'nginx-plus' || inputs.image }}
          tags: |
            type=semver,pattern={{version}}
            type=edge
            type=schedule
            type=ref,event=pr
            type=ref,event=branch,suffix=-rc,enable=${{ startsWith(github.ref, 'refs/heads/release') }}

      - name: Build binary
        uses: goreleaser/goreleaser-action@286f3b13b1b49da4ac219696163fb8c1c93e1200 # v6.0.0
        with:
          version: latest
          args: build --single-target --snapshot --clean
        env:
          TELEMETRY_ENDPOINT: otel-collector-opentelemetry-collector.collector.svc.cluster.local:4317
          TELEMETRY_ENDPOINT_INSECURE: "true"

      - name: Build NGF Docker Image
        uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6.3.0
        with:
          file: build/Dockerfile
          tags: ${{ steps.ngf-meta.outputs.tags }}
          context: "."
          load: true
          cache-from: type=gha,scope=ngf
          pull: true
          target: goreleaser

      - name: Build NGINX Docker Image
        uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6.3.0
        with:
          file: build/Dockerfile${{ inputs.image == 'nginx' && '.nginx' || '' }}${{ inputs.image == 'plus' && '.nginxplus' || ''}}
          tags: ${{ steps.nginx-meta.outputs.tags }}
          context: "."
          load: true
          cache-from: type=gha,scope=${{ inputs.image }}
          pull: true
          build-args: |
            NJS_DIR=internal/mode/static/nginx/modules/src
            NGINX_CONF_DIR=internal/mode/static/nginx/conf
            BUILD_AGENT=gha

      - name: Install cloud-provider-kind
        run: |
          curl -fsSL -O https://github.com/kubernetes-sigs/cloud-provider-kind/releases/download/v0.2.0/cloud-provider-kind_0.2.0_linux_amd64.tar.gz
          tar -xvf cloud-provider-kind_0.2.0_linux_amd64.tar.gz

      - name: Run cloud-provider-kind
        run: ./cloud-provider-kind & > cloud-provider-kind.log 2>&1

      - name: Deploy Kubernetes
        id: k8s
        run: |
          kind create cluster --name ${{ github.run_id }} --image=kindest/node:${{ inputs.k8s-version }}
          kind load docker-image ${{ join(fromJSON(steps.ngf-meta.outputs.json).tags, ' ') }} ${{ join(fromJSON(steps.nginx-meta.outputs.json).tags, ' ') }} --name ${{ github.run_id }}

      - name: Run functional telemetry tests
        run: |
          ngf_prefix=ghcr.io/nginxinc/nginx-gateway-fabric
          ngf_tag=${{ steps.ngf-meta.outputs.version }}
          make test${{ inputs.image == 'plus' && '-with-plus' || ''}} PREFIX=${ngf_prefix} TAG=${ngf_tag} GINKGO_LABEL=telemetry GW_SERVICE_TYPE=LoadBalancer
        working-directory: ./tests

      - name: Run functional graceful-recovery tests
        run: |
          ngf_prefix=ghcr.io/nginxinc/nginx-gateway-fabric
          ngf_tag=${{ steps.ngf-meta.outputs.version }}
          make test${{ inputs.image == 'plus' && '-with-plus' || ''}} PREFIX=${ngf_prefix} TAG=${ngf_tag} GINKGO_LABEL=graceful-recovery GW_SERVICE_TYPE=LoadBalancer CLUSTER_NAME=${{ github.run_id }}
        working-directory: ./tests

      - name: Run functional tests
        run: |
          ngf_prefix=ghcr.io/nginxinc/nginx-gateway-fabric
          ngf_tag=${{ steps.ngf-meta.outputs.version }}
          make test${{ inputs.image == 'plus' && '-with-plus' || ''}} PREFIX=${ngf_prefix} TAG=${ngf_tag} GW_SERVICE_TYPE=LoadBalancer
        working-directory: ./tests
