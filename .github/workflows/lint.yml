name: Lint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.ref_name }}-lint
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint:
    name: Go Lint
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        directory: [., tests] # we need to run golangci-lint for every module https://github.com/golangci/golangci-lint/issues/828
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Golang Environment
        uses: actions/setup-go@3041bf56c941b39c61721a86cd11f3bb1338122a # v5.2.0
        with:
          go-version: stable

      - name: Lint Go
        uses: golangci/golangci-lint-action@971e284b6050e8a5849b72094c50ab08da042db8 # v6.1.1
        with:
          working-directory: ${{ matrix.directory }}
          version: v1.62.2 # renovate: datasource=github-tags depName=golangci/golangci-lint

  njs-lint:
    name: NJS Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Node.js Environment
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version-file: .nvmrc

      - name: Run Prettier on NJS code
        id: prettier-run
        uses: rutajdash/prettier-cli-action@d42c4325a3b344f3bd4be482bc34de521998d557 # v1.0.2
        with:
          config_path: ${{ github.workspace }}/internal/mode/static/nginx/modules/.prettierrc
          file_pattern: ${{ github.workspace }}/internal/mode/static/nginx/modules/**/*.js
          prettier_version: 3.3.3 # renovate: datasource=npm depName=prettier

      - name: Prettier Output
        if: failure()
        shell: bash
        run: |
          echo "The following files are not formatted:"
          echo "${{steps.prettier-run.outputs.prettier_output}}"
          echo "Run \"make njs-fmt\" locally to format the code"

  actionlint:
    name: Actionlint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Lint Actions
        uses: reviewdog/action-actionlint@08ef4afa963243489a457cca426f705ce4e0d1a5 # v1.60.0
        with:
          actionlint_flags: -shellcheck ""

  markdown-lint:
    name: Markdown Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Lint Markdown
        uses: DavidAnson/markdownlint-cli2-action@eb5ca3ab411449c66620fe7f1b3c9e10547144b0 # v18.0.0
        with:
          config: .markdownlint-cli2.yaml
          globs: "**/*.md"
          fix: false

  chart-lint:
    name: Chart Lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@e6669bcd63d7cb57cb4380c33043eebe5d111992 # v2.6.1
        with:
          version: 3.11.0 # renovate: datasource=github-tags depName=helm/chart-testing

      - name: Run chart-testing
        run: ct lint --print-config --config .ct.yaml

  yaml-lint:
    name: YAML lint
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Lint YAML
        uses: reviewdog/action-yamllint@1dca3ad811867be18fbe293a9818d715a6c2cd46 # v1.20.0
