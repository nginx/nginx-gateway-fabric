apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nginx-gateway.fullname" . }}
  labels:
  {{- include "nginx-gateway.labels" . | nindent 4 }}
spec:
  # We only support a single replica for now
  replicas: 1
  selector:
    matchLabels:
      app: nginx-gateway
    {{- include "nginx-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: nginx-gateway
      {{- include "nginx-gateway.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args:
        - static-mode
        - --gateway-ctlr-name={{ .Values.nginxGateway.gatewayControllerName }}
        - --gatewayclass={{ .Values.nginxGateway.gatewayClassName }}
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: {{ .Values.nginxGateway.image.repository }}:{{ .Values.nginxGateway.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.nginxGateway.imagePullPolicy }}
        name: nginx-gateway
        securityContext:
          capabilities:
            add:
            - KILL
            drop:
            - ALL
          runAsUser: 1001
        volumeMounts:
        - mountPath: /etc/nginx
          name: nginx
      - image: {{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
        imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
        name: nginx
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        securityContext:
          capabilities:
            add:
            - CHOWN
            - NET_BIND_SERVICE
            - SETGID
            - SETUID
            - DAC_OVERRIDE
            drop:
            - ALL
        volumeMounts:
        - mountPath: /etc/nginx
          name: nginx
        - mountPath: /etc/nginx/nginx.conf
          name: nginx-conf
          subPath: nginx.conf
        - mountPath: /var/lib/nginx
          name: var-lib-nginx
        - mountPath: /usr/lib/nginx/modules/njs
          name: njs-modules
      initContainers:
      - command:
        - sh
        - -c
        - rm -r /etc/nginx/conf.d /etc/nginx/secrets; mkdir /etc/nginx/conf.d /etc/nginx/secrets
          && chown 1001:0 /etc/nginx/conf.d /etc/nginx/secrets
        image: {{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}
        name: set-permissions
        volumeMounts:
        - mountPath: /etc/nginx
          name: nginx
      serviceAccountName: {{ include "nginx-gateway.serviceAccountName" . }}
      shareProcessNamespace: true
      volumes:
      - emptyDir: {}
        name: nginx
      - configMap:
          name: {{ include "nginx-gateway.nginx-conf" . }}
        name: nginx-conf
      - emptyDir: {}
        name: var-lib-nginx
      - configMap:
          name: {{ include "nginx-gateway.njs-modules" . }}
        name: njs-modules
