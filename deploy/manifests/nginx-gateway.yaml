apiVersion: v1
kind: Namespace
metadata:
  name: nginx-gateway
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-gateway
  namespace: nginx-gateway
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-gateway
rules:
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  - gateways
  verbs:
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nginx-gateway
subjects:
- kind: ServiceAccount
  name: nginx-gateway
  namespace: nginx-gateway
roleRef:
  kind: ClusterRole
  name: nginx-gateway
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-gateway
  namespace: nginx-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-gateway
  template:
    metadata:
      labels:
        app: nginx-gateway
    spec:
      serviceAccountName: nginx-gateway
      volumes:
      - name: nginx-config
        emptyDir: { }
      initContainers:
      - image: busybox:1.34
        name: nginx-config-initializer
        command: [ 'sh', '-c', 'echo "events {} http { server { default_type text/plain; return 200 \"hello from \$hostname\n\"; } }" > /etc/nginx/nginx.conf' ]
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx
      containers:
      - image: nginx-gateway:0.0.1
        imagePullPolicy: IfNotPresent
        name: nginx-gateway
        args:
        - --gateway-ctlr-name=k8s-gateway.nginx.org/nginx-gateway/gateway
      - image: nginx:1.21.3
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - name: http
          containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx
