# NGINX Rust EPP POC runtime configuration
# - Loads the Rust-backed EPP module
# - Exposes /inference which invokes epp_get_endpoint
# - Internally redirects to /_ngf-internal-inference which proxies to the selected endpoint

# Log to stderr for container visibility
error_log /dev/stderr info;

# Load the dynamic module built in the image
load_module /etc/nginx/modules/ngx_http_rust_epp_module.so;

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Log access to stdout to avoid missing default logs/ path under custom prefix
    access_log /dev/stdout;

    # Resolve Docker container names when using variable proxy_pass targets
    # Docker embedded DNS listens on 127.0.0.11 inside the container network
    resolver 127.0.0.11 ipv6=off;
    resolver_timeout 5s;


    # Build a scheme-aware upstream URL from the endpoint variable
    map $inference_workload_endpoint $epp_upstream {
        "~*^https?://" $inference_workload_endpoint;
        default "http://$inference_workload_endpoint";
    }

    server {
        listen 80;
        server_name _;
        set $inference_workload_endpoint "";

        # Healthcheck/default
        location = / {
            return 200 "NGINX Rust EPP POC running\n";
            add_header Content-Type text/plain;
        }

        # Public inference entrypoint:
        # The module reads epp_host/epp_port/epp_internal_path,
        # calls Rust FFI to select endpoint, sets $inference_workload_endpoint,
        # and performs an internal redirect to $epp_internal_path (args preserved).
        location /inference {
            # Example variables (these would be set by NGF templates in real deployment)
            set $epp_host test-epp.default;
            set $epp_port 8080;
            set $epp_internal_path /_ngf-internal-inference;

            # Invoke Rust module
            epp_get_endpoint on;
        }

        # Internal location: proxies to the endpoint chosen by EPP logic
        location = /_ngf-internal-inference {
            internal;
            # Reset URI to "/" so backend receives root path; query args are preserved.
            rewrite ^ / break;

            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;

            # The module populates $inference_workload_endpoint, e.g., "http://backend1:8080" or "10.0.0.42:8080"
            # Use it directly to avoid duplicating the scheme.
            proxy_pass $epp_upstream;
        }
    }
}
